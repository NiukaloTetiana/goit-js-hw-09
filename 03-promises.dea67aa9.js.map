{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,KAlBM,CACXQ,KAAMC,SAASC,cAAc,SAC7BV,MAAOS,SAASC,cAAc,kBAC9BC,KAAMF,SAASC,cAAc,iBAC7BE,OAAQH,SAASC,cAAc,qBAG5BF,KAAKK,iBAAiB,UAe3B,SAAyBC,GACvBA,EAAIC,iBAQJ,IANA,IAAMP,EAAOM,EAAIE,OAEbC,EAAaC,OAAOV,EAAKW,SAASnB,MAAMoB,OACxCC,EAAYH,OAAOV,EAAKG,KAAKS,OAC7BE,EAAcJ,OAAOV,EAAKI,OAAOQ,OAE5BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCzB,EAAcyB,EAAGN,GACdO,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEnE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,qBAAoCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGtEiB,GAAcI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(evt) {\n  evt.preventDefault();\n\n  const form = evt.target;\n\n  let delayInput = Number(form.elements.delay.value);\n  let stepInput = Number(form.step.value);\n  let amountInput = Number(form.amount.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delayInput += stepInput;\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","step","amount","addEventListener","evt","preventDefault","target","delayInput","Number","elements","value","stepInput","amountInput","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.dea67aa9.js.map"}